types
  enum Fault {late, early, value, omission}

components
  A
    ports
      in aIn1
      in aIn2
      out aOut1
      out aOut2
    behaviour
      (Fault.late, Fault.value) -> (Fault.late, Fault.omission)
      (*, *) -> (Fault.early, Fault.value)
      (f, Fault.early) -> (Fault.omission, f)
      (Fault.value, _) -> (Fault.value, {Fault.late, Fault.early})


  B
    ports
      in bIn1
      in bIn2
      out bOut1
      out bOut2
    behaviour
      (Fault.early, x) -> (x, *)
      (*, *) -> (Fault.value, *)
      (f, Fault.early) -> (Fault.value, f)
      (Fault.value, _) -> (*, *)

connections
  A2B1 : A.aOut1 -> B.bIn1
  A2B2 : A.aOut2 -> B.bIn2

  B2A1 : B.bOut1 -> A.aIn1
  B2A2 : B.bOut2 -> A.aIn2