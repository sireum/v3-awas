types
  enum ErrorLibrary {ServiceError, ItemOmission, ServiceOmission, SequenceOmission, TransientServiceOmission, LateServiceStart, EarlyServiceTermination, BoundedOmissionInterval, ItemCommission, ServiceCommission, SequenceCommission, EarlyServiceStart, LateServiceTermination, ItemTimingError, EarlyDelivery, LateDelivery, SequenceTimingError, HighRate, LowRate, RateJitter, ServiceTimingError, DelayedService, EarlyService, TimingError, RateError, EarlyData, LateData, ServiceTimeShift, ItemValueError, UndetectableValueError, DetectableValueError, OutOfRange, BelowRange, AboveRange, OutOfBounds, SequenceValueError, BoundedValueChange, StuckValue, OutOfOrder, ServiceValueError, OutOfCalibration, ValueError, IncorrectValue, ValueCorruption, BadValue, SequenceError, SubtleValueError, BenignValueError, SubtleValueCorruption, ReplicationError, AsymmetricReplicatesError, AsymmetricValue, AsymmetricApproximateValue, AsymmetricExactValue, AsymmetricTiming, AsymmetricOmission, AsymmetricItemOmission, AsymmetricServiceOmission, SymmetricReplicatesError, SymmetricValue, SymmetricApproximateValue, SymmetricExactValue, SymmetricTiming, SymmetricOmission, SymmetricItemOmission, SymmetricServiceOmission, InconsistentValue, InconsistentTiming, InconsistentOmission, InconsistentItemOmission, InconsistentServiceOmission, AsymmetricTransmissive, ConcurrencyError, RaceCondition, ReadWriteRace, WriteWriteRace, MutExError, Deadlock, Starvation}

system  Communication_impl3_Instance

    sub-components {
      hw1
        with ErrorLibrary
          ports
            in nwInterface_IN
            out nwInterface_OUT
            in bindings_IN
            out bindings_OUT
          propagations
            bindings_OUT = {LateData}
            nwInterface_OUT = {ItemOmission}
          flows
            overloaded : * -> bindings_OUT{LateData}
            cpuCrashed : * -> nwInterface_OUT{ItemOmission}

      hw2
        with ErrorLibrary
          ports
            in nwInterface_IN
            out nwInterface_OUT
            in bindings_IN
            out bindings_OUT
          propagations
            bindings_OUT = {LateData}
            nwInterface_OUT = {ItemOmission}
          flows
            overloaded : * -> bindings_OUT{LateData}
            cpuCrashed : * -> nwInterface_OUT{ItemOmission}

      network
        with ErrorLibrary
          ports
            in ACCESS_IN
            out ACCESS_OUT
            in bindings_IN
            out bindings_OUT
          propagations
            bindings_IN = {LateData, EarlyData}
            access = {ItemOmission}
            bindings_OUT = {ItemOmission, LateData}
          flows
            qos_fail : access{ItemOmission} -> access{ItemOmission}
            qos_Npub : bindings_IN{EarlyData} -> bindings_OUT{ItemOmission}

      receiver
        with ErrorLibrary
          ports
            in sub
            in processor_IN
            out processor_OUT
          propagations
            sub = {ItemOmission, LateData, EarlyData}
          flows
            consume : sub{LateData, EarlyData, ItemOmission} -> *

      sender
        with ErrorLibrary
          ports
            out pub
            in processor_IN
            out processor_OUT
          propagations
            processor_IN = {LateData}
            pub = {LateData, EarlyData}
          flows
            qos_Npub : * -> pub{EarlyData}
            data_gen_delay : processor_IN{LateData} -> pub{LateData}
    }
    connections
      publish : sender.pub -> receiver.sub

    deployment
      Communication_impl3_Instance::publish -> Communication_impl3_Instance::network.bindings_IN

      Communication_impl3_Instance::hw2.bindings_OUT -> Communication_impl3_Instance::receiver.processor_IN

      Communication_impl3_Instance::network.bindings_OUT -> Communication_impl3_Instance::publish

      Communication_impl3_Instance::sender.processor_OUT -> Communication_impl3_Instance::hw1.bindings_IN

      Communication_impl3_Instance::receiver.processor_OUT -> Communication_impl3_Instance::hw2.bindings_IN

      Communication_impl3_Instance::hw1.bindings_OUT -> Communication_impl3_Instance::sender.processor_IN