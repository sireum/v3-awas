types
  enum ErrorLibrary {ServiceError, ItemOmission, ServiceOmission, SequenceOmission, TransientServiceOmission, LateServiceStart, EarlyServiceTermination, BoundedOmissionInterval, ItemCommission, ServiceCommission, SequenceCommission, EarlyServiceStart, LateServiceTermination, ItemTimingError, EarlyDelivery, LateDelivery, SequenceTimingError, HighRate, LowRate, RateJitter, ServiceTimingError, DelayedService, EarlyService, TimingError, RateError, EarlyData, LateData, ServiceTimeShift, ItemValueError, UndetectableValueError, DetectableValueError, OutOfRange, BelowRange, AboveRange, OutOfBounds, SequenceValueError, BoundedValueChange, StuckValue, OutOfOrder, ServiceValueError, OutOfCalibration, ValueError, IncorrectValue, ValueCorruption, BadValue, SequenceError, SubtleValueError, BenignValueError, SubtleValueCorruption, ReplicationError, AsymmetricReplicatesError, AsymmetricValue, AsymmetricApproximateValue, AsymmetricExactValue, AsymmetricTiming, AsymmetricOmission, AsymmetricItemOmission, AsymmetricServiceOmission, SymmetricReplicatesError, SymmetricValue, SymmetricApproximateValue, SymmetricExactValue, SymmetricTiming, SymmetricOmission, SymmetricItemOmission, SymmetricServiceOmission, InconsistentValue, InconsistentTiming, InconsistentOmission, InconsistentItemOmission, InconsistentServiceOmission, AsymmetricTransmissive, ConcurrencyError, RaceCondition, ReadWriteRace, WriteWriteRace, MutExError, Deadlock, Starvation}

components
  scenario_drop_scalpel_Instance

  clinician
    with ErrorLibrary
      ports
        out hand
        in foot
      propagations
        foot = {ItemCommission}
        hand = {ItemCommission}
      flows
        slippery_hand : * -> hand{ItemCommission}
        drop : foot{ItemCommission} -> *

  patient
    ports
      in skin

  scalpel
    with ErrorLibrary
      ports
        in handle
        out sharp_edge
      propagations
        handle = {ItemCommission}
        sharp_edge = {ItemCommission}
      flows
        slippery_handle : * -> sharp_edge{ItemCommission}
        drop : handle{ItemCommission} -> sharp_edge{ItemCommission}

connections
  hold : clinician.hand -> scalpel.handle

  intended_use : scalpel.sharp_edge -> patient.skin

  unintended_use : scalpel.sharp_edge -> clinician.foot